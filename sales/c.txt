
                ## CORREGIR QUE NO DEJA ENVIAR, SE DETIENE POR ESTE BLOQUE
                # LO QUE QUIERO ES DEVOLVER PRODUCTOS EN CAO DE CANCELACION DE DETALLE
                # if productoDatos["estado"] == 0:  
                #     producto = detalle.id_producto
                #     stock_actual = producto.cantidad
                #     nueva_cantidad = productoDatos["cantidad"]
                #     diferencia = nueva_cantidad - detalle.cantidad

                #     producto.cantidad = stock_actual + diferencia
                #     producto.save()

                # detalle.cantidad = nueva_cantidad 
                # detalle.save()    







                {% extends "baseInterface.html" %}
{% block title %} Agregar Venta {% endblock %}
{% block body %}

<head>
    {% load static %}
    <link rel="stylesheet" href="{% static 'css/CreateEditVentas.css' %}">
    <link rel="stylesheet" href="{% static 'css/common.css' %}">
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
</head>

<section class="row">
    <div class="col-md-5  d-flex align-items-center justify-content-center">
        <h1 class="modtitles">Agregar Venta</h1>
    </div>
    <div class="col-md-7 mb-3">
        <div class="row justify-content-end">
            <div class="cont-cliente">
                <select class="js-example-basic-single" name="client" style="width: 100%;">
                    <option value="">Selecciona el cliente</option>
                    {% for cliente in clientes %}
                    <option value="{{ cliente.id }}">{{ cliente.nombres }} {{ cliente.apellidos }} doc: {{cliente.documento }}</option>
                    {% endfor %}
                </select>
                <div class="cont-error-docu">
                    <span class="text-danger" id="error-docu"></span>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        $('.js-example-basic-single').select2({
            placeholder: 'Buscar cliente...',
            allowClear: true,
            minimumInputLength: 3,
        });
    });
</script>

<section class="container">
    <form id="venta-form" method="post"> {% csrf_token %}
        <div class="card shadow mb-4">
            <div class="card-header">
                <table class="table">
                    <thead class="theads">
                        <tr>
                            <th style="width: 40%;">Producto</th>
                            <th style="width: 15%;">Precio Unitario</th>
                            <th style="width: 10%;">Cantidad</th>
                            <th style="width: 30%;">Total del Producto</th>
                            <th style="width: 5%;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="producto-row">
                            <td class="p-2">
                                <input type="text" class="form-control producto" name="producto" id="producto"
                                    autocomplete="off" placeholder="Nombre del producto">
                                <span class="text-danger producto-error"></span>
                                <div class="p-2">
                                    <label class="text-secondary me-2 mess-sugges-prod">Sugerencias:</label>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <input type="text" class="form-control precioUnidad" id="precioUnidad"
                                        name="precioUnidad" readonly>
                                </div>
                            </td>
                            <td>
                                <input type="number" class="form-control cantidad p-0 text-center" id="cantidad"
                                    name="cantidad" autocomplete="off" min="1" step="1"
                                    oninput="this.value = (this.value === '0' ? '' : this.value.replace(/[^0-9]/g, ''));"
                                    placeholder="Cantidad">
                                <span class="text-danger error-cantidad"></span>
                            </td>
                            <td>
                                <div class="form-group">
                                    <input type="text" class="form-control precioTotal" id="precioTotal"
                                        name="precioTotal" readonly>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="cont-total-venta">
                    <div>
                        <input type="text" class="form-control" style="width: 200px;" id="totalVenta" readonly
                            placeholder="Total de Venta">
                    </div>
                    <div>
                        <button class="btn btn-agregar" id="agregar-producto" type="button">+
                            Agregar Producto</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row cont-crear-venta-crear">
            <button class="btn btn-crear" type="submit">Crear Venta</button>
        </div>
    </form>
</section>


<!-- <script src="{% static 'js/crearVentas.js'%}"></script> -->

<script>
    /********** DOCUMENTO ***********/

    $(document).ready(function () {


        function validarCliente(documentoDato) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "{% url 'validar_cliente' %}",
                    type: "GET",
                    data: {
                        documentoDato: documentoDato,
                    },
                    success: function (data) {
                        if (data.existe) {
                            resolve(true);
                        } else {
                            resolve(false);
                        }
                    },
                    error: function () {
                        reject(new Error("Error al validar el cliente"));
                    },
                });
            });
        }

        /********** PRODUCTO ***********/
        $(".mess-sugges-prod").after('<div class="producto-suggestions"></div>');
        $(document).on("input", ".producto", function () {
            let input = $(this).val();
            if (input.length >= 2) {
                let currentRow = $(this).closest("tr");
                $.ajax({
                    url: "{% url 'buscar_productos' %}?q=" + input,
                    type: "GET",
                    success: function (data) {
                        let suggestions = currentRow.find(".producto-suggestions");
                        suggestions.empty();
                        data.productos = data.productos.map((producto) =>
                            producto.toUpperCase()
                        );
                        if (data.productos.length > 0) {
                            let producSimilar1 = data.productos[0];
                            let producSimilar2 = data.productos[1];
                            let producSimilar3 = data.productos[2];
                            suggestions.html(
                                "<span class='resultado-sugerencia'>" + producSimilar1 + "</span>"
                            );
                            if (data.productos.length > 1) {
                                suggestions.append(
                                    "<span class='resultado-sugerencia'>" +
                                    producSimilar2 +
                                    "</span>"
                                );
                            }
                            if (data.productos.length > 2) {
                                suggestions.append(
                                    "<span class='resultado-sugerencia'>" +
                                    producSimilar3 +
                                    "</span>"
                                );
                            }

                            suggestions.addClass("sugerencia").show();
                        } else {
                            suggestions.hide();
                            calcularTotalVenta()
                        }
                    },
                    error: function () {
                        currentRow.find(".producto-suggestions").empty().hide();
                    },
                });
            } else {
                $(this).closest("tr").find(".producto-suggestions").empty().hide();
            }
        });

        $(document).on("click", function (event) {
            if (
                !$(event.target).closest(".producto").length &&
                !$(event.target).closest(".producto-suggestions").length
            ) {
                $(".producto-suggestions").empty().hide();
            }
        });

        $(document).on(
            "click",
            ".producto-suggestions span.resultado-sugerencia",
            function () {
                let currentRow = $(this).closest("tr");
                let nombreProducto = $(this).text();
                nombreProducto =
                    nombreProducto.charAt(0).toUpperCase() +
                    nombreProducto.slice(1).toLowerCase();
                currentRow.find(".producto").val(nombreProducto);

                validarProducto(currentRow, nombreProducto);
            }
        );

        $(document).on("click", ".producto-suggestions span", function () {
            let currentRow = $(this).closest("tr");
            let nombreProducto = $(this).text();
            nombreProducto =
                nombreProducto.charAt(0).toUpperCase() +
                nombreProducto.slice(1).toLowerCase();
            currentRow.find(".producto").val(nombreProducto);
            currentRow.find(".producto-suggestions").empty().hide();
            currentRow.find(".precioUnidad").removeClass("is-invalid");
        });

        /********** PRECIOS ***********/
        $(document).on("input", ".producto", function () {
            let currentRow = $(this).closest("tr");
            let nombreProducto = $(this).val();
            currentRow.find(".producto-error").text("");
            currentRow.find(".producto").removeClass("is-invalid");
            currentRow.find(".cantidad").removeClass("is-invalid");
            currentRow.find(".error-cantidad").text("");
            if (nombreProducto.length >= 2) {
                validarProducto(currentRow, nombreProducto);
            } else {
                currentRow.find(".cantidad, .precioTotal, .precioUnidad").val("");
                calcularTotalVenta();
            }
        });

        function validarProducto(currentRow, nombreProducto) {
            $.ajax({
                url: "{% url 'validar_producto' %}",
                type: "GET",
                data: {
                    nombre_producto: nombreProducto,
                },
                success: function (data) {
                    if (data.existe) {
                        obtenerPrecioProducto(currentRow, nombreProducto);
                    } else {
                        currentRow.find(".cantidad, .precioTotal, .precioUnidad").val("");
                        calcularTotalVenta();
                    }
                },
                error: function () {
                    currentRow.find(".cantidad, .precioTotal").val("");
                    calcularTotalVenta();
                },
            });
        }

        function formatearPrecios(valor) {
            valor = Math.round(valor * 100) / 100;
            let precioFormateado = valor.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
            return '$ ' + precioFormateado;
        }

        function obtenerPrecioProducto(currentRow, nombreProducto) {
            $.ajax({
                url: "{% url 'obtener_precio_producto' %}",
                type: "GET",
                data: {
                    nombre_producto: nombreProducto,
                },
                success: function (data) {
                    if ("precio" in data) {
                        let precioUValue = parseFloat(data.precio)
                        let precioTotalFormatted = formatearPrecios(precioUValue);
                        let precioU = currentRow.find(".precioUnidad").val(precioTotalFormatted);
                    }
                    else {
                        currentRow.find(".precioUnidad").addClass("is-invalid");
                    }
                },
                error: function () {
                    currentRow.find(".cantidad, .precioTotal").val("");
                },
            });
        }
        $(document).ready(function () {
            $(".precioTotal").val("");
            $(".precioUnidad").val("");
            $("#totalVenta").val("");
        });

        $(document).on("input", ".cantidad", function () {
            calcularTotalProducto($(this));
        });
        function calcularTotalProducto(inputCantidad) {
            let currentRow = inputCantidad.closest("tr");
            let precioUnidad = parseFloat(currentRow.find(".precioUnidad").val().replace(/[$,.]/g, ''));

            let cantidad = parseInt(inputCantidad.val());

            if (!isNaN(precioUnidad) && !isNaN(cantidad)) {
                let total = precioUnidad * cantidad;
                let formateoTotal = formatearPrecios(total)
                currentRow.find(".precioTotal").val(formateoTotal);
                calcularTotalVenta();
            } else {
                currentRow.find(".precioTotal").val("");
                calcularTotalVenta();
            }
        }

        $(document).on("click", ".eliminar-producto", function () {
            currentRow = $(this).closest("tr.producto-row").remove();
            calcularTotalVenta();
        });

        $("#agregar-producto").on("click", function () {
            let nuevaFila =
                '<tr class="producto-row">' +
                "<td>" +
                '<input type="text" class="form-control producto" name="producto" id="producto" autocomplete="off" placeholder="Nombre del producto">' +
                '<span class="text-danger producto-error" ></span>' +
                '<div class="p-2">' +
                '<label class="text-secondary me-2 mess-sugges-prod">Sugerencias:</label>' +
                "</div>" +
                "</td>" +
                "<td>" +
                '<div class="form-group">' +
                '<input type="text" class="form-control precioUnidad" id="precioUnidad" name="precioUnidad" readonly>' +
                '<span  id="precioU-error"></span>' +
                "</div>" +
                "</td>" +
                "<td>" +
                '<div class="form-group">' +
                '<input type="number" class="form-control cantidad p-0 text-center" id="cantidad" name="cantidad" autocomplete="off" min="1" oninput="this.value = (this.value === \'0\' ? \'\' : this.value.replace(/[^0-9]/g, \'\'));" placeholder="Cantidad">' +
                '<span class="text-danger error-cantidad"></span>' +
                "</div>" +
                "</td>" +
                "<td>" +
                '<div class="form-group">' +
                '<input type="text" class="form-control precioTotal" id="precioTotal" name="precioTotal" readonly>' +
                '<span id="total-error"></span>' +
                "</div>" +
                '<td class="eliminar-producto"><span class="icono-eliminar">X</span></td>' +
                "</td>";
            +"</tr>";
            let filaAgregada = $(nuevaFila);
            $("tbody").append(filaAgregada);

            inicializarSugerenciasEnFila(filaAgregada);
        });


        function inicializarSugerenciasEnFila(fila) {
            fila
                .find(".mess-sugges-prod")
                .after('<div class="producto-suggestions"></div>');
        }

        function calcularTotalVenta() {
            let totalVenta = 0; // Inicializa como número

            $(".producto-row").each(function () {
                let precioTotal = parseFloat($(this).find(".precioTotal").val().replace(/[$,.]/g, ''));
                if (!isNaN(precioTotal)) {
                    totalVenta += precioTotal;
                }
            });

            let formateoTotalVenta = formatearPrecios(totalVenta)
            $("#totalVenta").val(formateoTotalVenta);
        }

        function validarCantidad() {
            const cantidad = parseInt($(this).val());
            const nombreProducto = $(this).closest("tr.producto-row").find(".producto").val();

            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "{% url 'validar_cantidad' %}",
                    type: "GET",
                    data: {
                        cantidad: cantidad,
                        nombre: nombreProducto,
                    },
                    success: function (data) {
                        if (data.suficiente) {
                            resolve(true);
                        } else {
                            resolve(false);
                        }
                    },
                    error: function () {
                        reject(new Error("Error al validar la cantidad"));
                    },
                });
            });
        }

        function validarCamposLlenos() {
            let camposLlenos = true;
            const documentoValue = $("#documentoDato").text();
            const totalVentaValue = parseFloat($("#totalVenta").val().replace(/[$,.]/g, '')).toFixed(2);
            const productos = [];
            const productoNombres = {};

            $(".producto-row").each(function (index) {
                const row = $(this);
                const productoInput = row.find(".producto");
                const cantidadInput = row.find(".cantidad");
                const precioUnidad = row.find(".precioUnidad").val();
                const precioUnidadInput = row.find(".precioUnidad");
                const precioTotalInput = row.find(".precioTotal");

                const productoValue = productoInput.val().toLowerCase();
                const precioUnidadValue = parseFloat(precioUnidadInput.val().replace(/[$,.]/g, '')).toFixed(2);
                const precioTotalValue = parseFloat(precioTotalInput.val().replace(/[$,.]/g, '')).toFixed(2);
                const cantidadValue = parseInt(cantidadInput.val());

                if (isNaN(precioUnidadValue)) {
                    row.find(".producto-error").text("El campo del producto debe estar correctamente escrito. Por favor, verifique y vuelva a intentar.");
                    camposLlenos = false;
                }
                if (!productoValue) {
                    row.find(".producto-error").text("El campo del producto no puede estar vacío. Por favor, ingréselo correctamente.");
                    camposLlenos = false;
                }

                if (!cantidadValue) {
                    mostrarError(cantidadInput);
                    camposLlenos = false;
                }
                if ($(".error-cantidad").text() !== "") {
                    camposLlenos = false;
                }

                if (productoValue && productoNombres[productoValue]) {
                    productoInput.addClass("is-invalid");
                    row
                        .find(".producto-error")
                        .text("Este producto ya ha sido seleccionado anteriormente.");
                    camposLlenos = false;
                } else if (productoValue) {
                    productoInput.removeClass("is-invalid");
                    productos.push({
                        nombre: productoValue,
                        precioUnidad: precioUnidadValue,
                        precioTotal: precioTotalValue,
                        cantidad: cantidadValue
                    });
                    productoNombres[productoValue] = true;
                }
            });
            return camposLlenos
                ? { documento: documentoValue, totalVenta: totalVentaValue, productos: productos }
                : null;
        }



        function mostrarError(selector) {
            $(selector).addClass("is-invalid");
            $("#nombreCliente, .producto, .cantidad").on("input", function () {
                const campo = $(this);
                if (campo.val()) {
                    campo.removeClass("is-invalid");
                }
            });
        }



        $('#venta-form').submit(function (event) {
            event.preventDefault();

            const data = validarCamposLlenos();
            if (!data) { // Comprueba si la bandera indica campos válidos
                return;
            } else {
                enviarDatosVentas(data);
            }
        });

        $(document).on('input', '.cantidad', function () {
            const $this = $(this);
            const fila = $this.closest("tr.producto-row");
            validarCantidad.call(this).then(function (suficiente) {
                if (suficiente) {
                    $this.removeClass("is-invalid");
                    fila.find(".error-cantidad").text("");
                } else {
                    $this.addClass("is-invalid");
                    fila.find(".error-cantidad").text("La cantidad supera el stock mínimo.").css("color", "red");
                }
            });
        });



        function enviarDatosVentas(data) {  // Recibir data como argumento
            $.ajax({
                type: "POST",
                url: "{% url 'crear_venta' %}",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    if (response.success) {
                        alert("Venta Creada con Éxito.");
                        window.location.href = "{% url 'ventas' %}";
                    }
                },
            });
        }

    });

</script>

<style>
</style>

{% endblock %}